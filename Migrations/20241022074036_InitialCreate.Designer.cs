// <auto-generated />
using BohatyrovAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BohatyrovAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241022074036_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BohatyrovAPI.Models.Kasutaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Eesnimi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Kasutajanimi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Parool")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Perenimi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Kasutajad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eesnimi = "Oleksandr",
                            Kasutajanimi = "sasa",
                            Parool = "123",
                            Perenimi = "Bohatyrov"
                        },
                        new
                        {
                            Id = 2,
                            Eesnimi = "Artur",
                            Kasutajanimi = "arturi",
                            Parool = "123",
                            Perenimi = "Šuškevitš"
                        });
                });

            modelBuilder.Entity("BohatyrovAPI.Models.Toode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Tooted");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Koola",
                            Price = 1.5
                        },
                        new
                        {
                            Id = 2,
                            IsActive = false,
                            Name = "Fanta",
                            Price = 1.0
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Sprite",
                            Price = 1.7
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Vichy",
                            Price = 2.0
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Vitamin well",
                            Price = 2.5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
